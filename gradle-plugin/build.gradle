plugins {
  id 'groovy'
  id 'signing'
  id 'maven-publish'
  id 'java-gradle-plugin'
  id 'com.palantir.git-version' version '3.0.0'
  id("com.gradle.plugin-publish") version "1.2.1"
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(8))
  }
}

//OMG https://github.com/gradle/gradle/issues/17236 Seriously??
gradle.taskGraph.whenReady {
  List<Task> tasks = project.gradle.taskGraph.getAllTasks()
  for (Task task : tasks) {
    if (task.hasProperty("duplicatesStrategy")) {
      task.setProperty("duplicatesStrategy", "WARN")
    }
  }
}

group = 'com.needhamsoftware.unojar'
version = '2.0.0-SNAPSHOT'

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation 'com.needhamsoftware.unojar:core:' + project.version
  implementation 'commons-io:commons-io:2.11.0'
  implementation 'org.apache.commons:commons-lang3:3.12.0'

  implementation gradleApi()
}

gradlePlugin {
  plugins {
    'unojar' {
      id = 'com.needhamsoftware.unojar'
      displayName = 'Uno-Jar'
      description = 'Single jar packaging based on a JarClassLoader. Unlike maven shade and gradle shadow, this form of packaging does not intermix classes into a single directory, and thereby maintains a degree of separation between libraries with distinct licensing concerns. Does not require write access to the filesystem like capsule'
      implementationClass = 'com.needhamsoftware.unojar.gradle.UnoJarPlugin'
    }
  }
}
jar.manifest.attributes getManifestAttributes()

@SuppressWarnings("GroovyAssignabilityCheck")
def getManifestAttributes() {
  def gitDetails = versionDetails();
  return [
      'Implementation-Version': version,
      'Build-Tool': "Gradle ${gradle.gradleVersion}",
      'Build-Revision': gitDetails.gitHashFull + (gitDetails.isCleanTag ? '' : ' (with uncommitted files)'),
      'Created-By': "Gradle ${gradle.gradleVersion}",
      'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
      'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"]
}

ext.testingRepo = 'file:///tmp/myPluginRepo/'

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId 'com.needhamsoftware.unojar'
      artifactId 'gradle-plugin'
      version project.version
      from components.java
    }
  }
  repositories {
    maven {
      name = 'localPluginRepository'
      url = testingRepo
    }
  }
}

gradlePlugin {
  website = 'https://github.com/nsoft/uno-jar'
  vcsUrl = 'https://github.com/nsoft/uno-jar.git'

  //Note: this won't be considered tested and working until we can do a release. What you see here is known
  // to placate Gradle 8.6 and newest version of gradle plugin.
  plugins {
    unoJarPlugin {
      id = 'com.needhamsoftware.unojar'
      implementationClass = 'com.needhamsoftware.unojar.gradle.PackageUnoJarTask'
      displayName = 'Uno-Jar Plugin'
      description = 'Single jar packaging based on a JarClassLoader. Unlike maven shade and gradle shadow, ' +
          'this form of packaging does not intermix classes into a single directory, and thereby maintains a ' +
          'degree of separation between libraries with distinct licensing concerns. Does not require write ' +
          'access to the filesystem like capsule'
      tags.set(['jar', 'executable-jar', 'onejar', 'one-jar', 'shade', 'shadow', 'fatjar', 'uberjar', 'capsule'])
    }
  }
}
